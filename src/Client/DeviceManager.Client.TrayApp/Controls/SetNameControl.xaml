<!-- 
This file is part of Device Manager project released under GNU General Public License v3.0.
See file LICENSE.md or go to https://www.gnu.org/licenses/gpl-3.0.html for full license details.
Copyright © Hakan Yildizhan 2020.
-->
    
<MenuItem x:Class="DeviceManager.Client.TrayApp.SetNameControl"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:local="clr-namespace:DeviceManager.Client.TrayApp"
          mc:Ignorable="d"
          Style="{DynamicResource MenuItemControlTemplate2}">

    <MenuItem.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <!-- Button template  -->
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border 
                            x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                            
                            <ContentPresenter 
                                x:Name="contentPresenter" 
                                Focusable="False" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuItemControlTemplate2" TargetType="{x:Type MenuItem}">
            <Setter Property="StaysOpenOnClick" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">

                        <Border 
                            x:Name="templateRoot" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                            
                            <Grid Margin="-1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                    <ColumnDefinition Width="13"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>

                                <!-- Edit/set name buttons -->
                                <Grid Grid.Column="0"
                                      Visibility="{TemplateBinding local:IsVisibleProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}">
                                    
                                    <!-- Edit button -->
                                    <Button x:Name="Icon"
                                        Style="{StaticResource ButtonStyle2}"
                                        Command="{Binding EnterEditModeCommand}"
                                        Height="20"
                                        Width="20"
                                        BorderThickness="0"
                                        Background="Transparent"
                                        HorizontalAlignment="Center" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                        VerticalAlignment="Center"
                                        ToolTip="Edit my name"
                                        Visibility="{Binding EditMode, Converter={local:BooleanToVisibilityConverter}}">

                                        <StackPanel HorizontalAlignment="Center">
                                            <Image 
                                            Source="{StaticResource EditImage}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Button>

                                    <!-- Set name button -->
                                    <Button x:Name="Icon2"
                                        Style="{StaticResource ButtonStyle2}"
                                        Command="{Binding SetNameCommand}"
                                        CommandParameter="{Binding Text, ElementName=txtFriendlyName}"
                                        Height="20"
                                        Width="20"
                                        BorderThickness="0"
                                        Background="Transparent"
                                        HorizontalAlignment="Center" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                        VerticalAlignment="Center"
                                        ToolTip="Set name"
                                        Visibility="{Binding EditMode, Converter={local:BooleanToVisibilityConverter},ConverterParameter=True}">

                                        <StackPanel HorizontalAlignment="Center">
                                            <Image 
                                            Source="{StaticResource TickImage}"
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Button>
                                </Grid>

                                <Border 
                                    x:Name="GlyphPanel" 
                                    BorderBrush="#FF26A0DA" 
                                    BorderThickness="1" 
                                    Background="#3D26A0DA" 
                                    ClipToBounds="False" 
                                    HorizontalAlignment="Center" 
                                    Height="22" 
                                    Margin="-1,0,0,0" 
                                    Visibility="Hidden" 
                                    VerticalAlignment="Center" 
                                    Width="22">

                                    <Path 
                                        x:Name="Glyph" 
                                        Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" 
                                        Fill="#FF212121" 
                                        FlowDirection="LeftToRight" 
                                        Height="11" 
                                        Width="10"/>
                                </Border>

                                <!-- User name -->
                                <ContentPresenter 
                                    x:Name="menuHeaderContainer" 
                                    ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                    Content="{TemplateBinding Header}"
                                    Grid.Column="2" 
                                    ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                    ContentSource="Header" 
                                    HorizontalAlignment="Left" 
                                    Margin="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="Center"
                                    TextBlock.Foreground="{StaticResource Button.Disabled.Foreground}"
                                    Visibility="{Binding EditMode, Converter={local:BooleanToVisibilityConverter}}"/>

                                <!-- User name edit textbox -->
                                <TextBox x:Name="txtFriendlyName"
                                    Width="100"
                                    Grid.Column="2" 
                                    HorizontalAlignment="Left" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="Center"
                                    BorderThickness="0"
                                    Tag="UserName"
                                    Visibility="{Binding EditMode, Converter={local:BooleanToVisibilityConverter},ConverterParameter=True}"/>

                                <!-- Text shown until app initializes -->
                                <Grid Grid.Column="2"
                                      Visibility="{TemplateBinding local:IsVisibleProperty.Value, Converter={local:BooleanToVisibilityConverter}}">
                                    <ContentPresenter 
                                        Content="{TemplateBinding local:IsOfflineProperty.Value, Converter={local:OnlineStateToSetNameTextConverter}}"
                                        ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                        ContentSource="Header"
                                        HorizontalAlignment="Left" 
                                        Margin="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        VerticalAlignment="Center"
                                        TextBlock.Foreground="{StaticResource Button.Disabled.Foreground}"/>
                                </Grid>

                                <TextBlock 
                                    x:Name="menuGestureText" 
                                    Grid.Column="4" 
                                    Margin="{TemplateBinding Padding}" 
                                    Opacity="0.7" 
                                    Text="{TemplateBinding InputGestureText}" 
                                    VerticalAlignment="Center"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                            </Trigger>-->
                            <!--<Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                            </Trigger>-->
                            <!--<Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                                <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                    <Condition Property="IsEnabled" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
    </MenuItem.Resources>

    <d:DesignerProperties.DesignStyle>
        <Style TargetType="MenuItem">
            <Setter Property="Background" 
                    Value="{x:Static SystemColors.MenuBrush}"/>
            <Setter Property="Foreground" 
                    Value="{x:Static SystemColors.MenuTextBrush}"/>
        </Style>
    </d:DesignerProperties.DesignStyle>
    
</MenuItem>

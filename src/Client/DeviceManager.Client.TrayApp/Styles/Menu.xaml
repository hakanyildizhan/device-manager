<!-- 
This file is part of Device Manager project released under GNU General Public License v3.0.
See file LICENSE.md or go to https://www.gnu.org/licenses/gpl-3.0.html for full license details.
Copyright © Hakan Yildizhan 2020.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DeviceManager.Client.TrayApp"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="ContextMenuStyle"  TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="LightBlue"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderThickness="1"
                        BorderBrush="LightBlue">
                        <StackPanel IsItemsHost="True"
                                Background="{TemplateBinding Background}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for menu item tooltips -->
    <Style x:Key="MenuItemTooltipTemplate" TargetType="{x:Type ToolTip}">
        <Style.Triggers>
            <!-- Do not show tooltip if it contains an empty string -->
            <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>

            <!-- Do not show tooltip if it contains a null valued binding -->
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" 
                               SnapsToDevicePixels="true" 
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                               StrokeThickness="1" 
                               StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon button template  -->
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>

        <Setter Property="IsEnabled">
            <Setter.Value>
                <MultiBinding Converter="{local:BooleanOrBooleanConverter}">
                    <Binding Path="IsAvailable" />
                    <Binding Path="UsedByMe" />
                </MultiBinding>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItem template -->
    <Style x:Key="MenuItemControlTemplate" TargetType="{x:Type MenuItem}">

        <Style.Resources>
            <!-- Tooltip style for the menu item -->
            <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource MenuItemTooltipTemplate}"/>
        </Style.Resources>

        <Setter Property="StaysOpenOnClick" Value="True"/>
        <Setter Property="IsEnabled">
            <Setter.Value>
                <MultiBinding Converter="{local:BooleanOrBooleanConverter}">
                    <Binding Path="IsAvailable" />
                    <Binding Path="UsedByMe" />
                </MultiBinding>
            </Setter.Value>
        </Setter>

        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">

                    <Border x:Name="templateRoot" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">

                        <Grid Margin="-1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                <ColumnDefinition Width="13"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>

                            <Button x:Name="Icon"
                                    Style="{StaticResource IconButtonStyle}"
                                    Command="{Binding CheckoutOrReleaseCommand}"
                                    Height="20"
                                    Width="20"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    HorizontalAlignment="Center" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="Center"
                                    Padding="5 0 0 0"
                                >

                                <StackPanel HorizontalAlignment="Center" >
                                    <Image Source="{Binding IsAvailable, Converter={local:AvailabilityToIconConverter}}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                   />

                                    <TextBlock Style="{StaticResource SpinningText}"
                                                   HorizontalAlignment="Center"
                                                   Margin="0 -15 0 0"
                                                   Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                        />

                                </StackPanel>
                            </Button>

                            <Border x:Name="GlyphPanel" 
                                    BorderBrush="#FF26A0DA" 
                                    BorderThickness="1" 
                                    Background="#3D26A0DA" 
                                    ClipToBounds="False" 
                                    HorizontalAlignment="Center" 
                                    Height="22" 
                                    Margin="-1,0,0,0" 
                                    Visibility="Hidden" 
                                    VerticalAlignment="Center" 
                                    Width="22">

                                <Path x:Name="Glyph" 
                                      Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" 
                                      Fill="#FF212121" 
                                      FlowDirection="LeftToRight" 
                                      Height="11" 
                                      Width="10"
                                    />
                            </Border>
                            <ContentPresenter 
                                    x:Name="menuHeaderContainer" 
                                    ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                    Content="{TemplateBinding Header}" 
                                    Grid.Column="2" 
                                    ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                    ContentSource="Header" 
                                    HorizontalAlignment="Left" 
                                    Margin="{TemplateBinding Padding}"  
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="Center"
                                    />

                            <TextBlock 
                                    x:Name="menuGestureText" 
                                    Grid.Column="4" Margin="{TemplateBinding Padding}" 
                                    Opacity="0.7" 
                                    Text="{TemplateBinding InputGestureText}" 
                                    VerticalAlignment="Center"/>

                            <Button x:Name="Iconf"
                                    Style="{StaticResource IconButtonStyle}"
                                    Command="{Binding CopyClipboardToDeviceInfo}"
                                    BorderThickness="0"
                                    Background="Transparent"
    
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="Center"
                                     Grid.Column="5"
                                >

                                <StackPanel HorizontalAlignment="Center" >
                                    <Image Source="{StaticResource CopyImage}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                   />

                                </StackPanel>
                            </Button>


                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                            </Trigger>-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                            <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                            <Setter Property="ToolTipService.ShowOnDisabled" Value="true"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>